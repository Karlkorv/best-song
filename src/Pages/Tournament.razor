@page "/tournament"
@using best_song.Data
@using SpotifyAPI.Web
@inject Spotify Spotify
@inject ILogger<Tournament> Logger
@inject Tournament<FullTrack> Trn
<h3>Tournament</h3>
@if (!_trnFinished)
{
    <div class="card">
        <div class="card-header">
            <button @onclick="WinHigher">@Trn.CurrentMatchUp[0].Name</button>
        </div>
        <div class="card-body">
            <img src="@Trn.CurrentMatchUp[0].Album.Images[1].Url" alt="Album cover"/>
            <audio controls>
                <source src="@Trn.CurrentMatchUp[0].PreviewUrl">
            </audio>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <button @onclick="WinLower">@Trn.CurrentMatchUp[1].Name</button>
        </div>
        <div class="card-body">
            <img src="@Trn.CurrentMatchUp[1].Album.Images[1].Url" alt="Album cover"/>
            <audio controls>
                <source src="@Trn.CurrentMatchUp[1].PreviewUrl">
            </audio>
        </div>
    </div>
}
else
{
    <div class="song">
        <h1>Vinnaren Ã¤r...</h1>
        <img src="@Trn.Winner?.Album.Images[0].Url" alt="Album cover"/>
        <h1>@Trn.Winner?.Name</h1>
    </div>
}

@code
{
    private readonly bool _trnFinished = false;

    private void WinHigher()
    {
        if (Trn.Win(Trn.CurrentMatchUp[0]))
        {
            HandleWinner();
        }
        else
        {
            StateHasChanged();
        }
    }

    private void WinLower()
    {
        if (Trn.Win(Trn.CurrentMatchUp[1]))
        {
            HandleWinner();
        }
        else
        {
            StateHasChanged();
        }
    }

    private void HandleWinner()
    {
    }
}