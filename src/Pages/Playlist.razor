@page "/"
@using Blazored.LocalStorage
@using SpotifyAPI.Web
@using best_song.Data
@inject NavigationManager NavigationManager
@inject ILogger<Playlist> Logger;
@inject ILocalStorageService Storage
@inject Tournament<FullTrack> Trn;
@inject Spotify Spotify
<body>
<h3>Input Playlist</h3>
<form>
    <input id="playlistSubmit" type="url" @bind="_input" placeholder="Enter playlist url" onsubmit="@HandleSubmit()"/>
</form>
</body>

@code
{
    private string _input = string.Empty;

    private async Task<string> HandleSubmit()
    {
        try
        {
            Logger.Log(LogLevel.Information, "Playlist submitted");
            var playList = await Spotify.GetPlayList(_input);
            if (playList.Count == 0)
            {
                _input = string.Empty;
                return "bad";
            }
            Logger.Log(LogLevel.Information, "Playlist is valid");
            await Storage.SetItemAsync("validPlaylist", true);
            Trn.AddEntries(playList);
            Logger.Log(LogLevel.Information, "Playlist submitted to tournament");
            NavigationManager.NavigateTo(NavigationManager.ToAbsoluteUri("tournament").ToString());
            return "good";
        }
        catch (APIException e)
        {
            Console.WriteLine(e); // Behöver error handling här hjälp
            return "bad";
        }
    }
}